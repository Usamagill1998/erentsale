{
  "_args": [
    [
      {
        "raw": "react-native-image-slider@^2.0.3",
        "scope": null,
        "escapedName": "react-native-image-slider",
        "name": "react-native-image-slider",
        "rawSpec": "^2.0.3",
        "spec": ">=2.0.3 <3.0.0",
        "type": "range"
      },
      "C:\\Users\\Osama\\Desktop\\ers"
    ]
  ],
  "_from": "react-native-image-slider@>=2.0.3 <3.0.0",
  "_id": "react-native-image-slider@2.0.3",
  "_inCache": true,
  "_location": "/react-native-image-slider",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/react-native-image-slider_2.0.3_1518286029416_0.23041373007930588"
  },
  "_npmUser": {
    "name": "artiom",
    "email": "vaomamago@gmail.com"
  },
  "_phantomChildren": {},
  "_requested": {
    "raw": "react-native-image-slider@^2.0.3",
    "scope": null,
    "escapedName": "react-native-image-slider",
    "name": "react-native-image-slider",
    "rawSpec": "^2.0.3",
    "spec": ">=2.0.3 <3.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/react-native-image-slider/-/react-native-image-slider-2.0.3.tgz",
  "_shasum": "bbfdb88612d7ecef4da57e3fce7bbd99b4f02504",
  "_shrinkwrap": null,
  "_spec": "react-native-image-slider@^2.0.3",
  "_where": "C:\\Users\\Osama\\Desktop\\ers",
  "author": {
    "name": "Paul Sauve",
    "email": "paul@burngames.net",
    "url": "https://paulb.gd"
  },
  "bugs": {
    "url": "https://github.com/PaulBGD/react-native-image-slider/issues"
  },
  "contributors": [
    {
      "name": "Artiom Shapovalov",
      "email": "vaomamago@gmail.com"
    }
  ],
  "dependencies": {
    "flow-bin": "^0.63.1",
    "flow-typed": "^2.2.3"
  },
  "description": "A easy to use image slider for React Native",
  "devDependencies": {},
  "directories": {},
  "dist": {
    "shasum": "bbfdb88612d7ecef4da57e3fce7bbd99b4f02504",
    "tarball": "https://registry.npmjs.org/react-native-image-slider/-/react-native-image-slider-2.0.3.tgz",
    "fileCount": 81,
    "unpackedSize": 189090
  },
  "homepage": "https://github.com/PaulBGD/react-native-image-slider#readme",
  "license": "MIT",
  "licenseText": "The MIT License (MIT)\n\nCopyright (c) 2016 Burn Games LLC.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n",
  "main": "ImageSlider.js",
  "maintainers": [
    {
      "name": "artiom",
      "email": "vaomamago@gmail.com"
    },
    {
      "name": "paulbgd",
      "email": "paul@burngames.net"
    }
  ],
  "name": "react-native-image-slider",
  "optionalDependencies": {},
  "peerDependencies": {
    "react-native": "*"
  },
  "readme": "# react-native-image-slider\n\nA quick and easy image slider for react native.\n\n![GIF](final.gif)\n\n## Installation\n\n```bash\nnpm install react-native-image-slider --save\n```\nor\n```bash\nyarn add react-native-image-slider\n```\n\n## Usage\n\n```javascript\nimport ImageSlider from 'react-native-image-slider';\n\n// ...\n\nrender() {\n  return (<ImageSlider images={[\n    'http://placeimg.com/640/480/any',\n    'http://placeimg.com/640/480/any',\n    'http://placeimg.com/640/480/any'\n  ]}/>)\n}\n```\n\n### Autoplay / Custom buttons / Custom slide / Loop\n\n```javascript\nclass Example extends Component<{}> {\n  render() {\n    const images = [\n      'https://placeimg.com/640/640/nature',\n      'https://placeimg.com/640/640/people',\n      'https://placeimg.com/640/640/animals',\n      'https://placeimg.com/640/640/beer',\n    ];\n\n    return (\n      <SafeAreaView style={styles.container}>\n        <View style={styles.content1}>\n          <Text style={styles.contentText}>Content 1</Text>\n        </View>\n        <ImageSlider\n          loopBothSides\n          autoPlayWithInterval={3000}\n          images={images}\n          customSlide={({ index, item, style, width }) => (\n            // It's important to put style here because it's got offset inside\n            <View key={index} style={[style, styles.customSlide]}>\n              <Image source={{ uri: item }} style={styles.customImage} />\n            </View>\n          )}\n          customButtons={(position, move) => (\n            <View style={styles.buttons}>\n              {images.map((image, index) => {\n                return (\n                  <TouchableHighlight\n                    key={index}\n                    underlayColor=\"#ccc\"\n                    onPress={() => move(index)}\n                    style={styles.button}\n                  >\n                    <Text style={position === index && styles.buttonSelected}>\n                      {index + 1}\n                    </Text>\n                  </TouchableHighlight>\n                );\n              })}\n            </View>\n          )}\n        />\n        <View style={styles.content2}>\n          <Text style={styles.contentText}>Content 2</Text>\n        </View>\n      </SafeAreaView>\n    );\n  }\n}\n```\n\n## Props\n\n### `images`\n\nrendered images\n\n### `customButtons`\n\nfunction returns custom pagination buttons component, it's got position index and move to position function as arguments\n\n### `customSlide`\n\nfunction returns Node with arguments `index` - images list index, `item` - anything you pass inside images prop, `style` - for top component of your custom slide, `width` - calculated slide width\n\n### `autoPlayWithInterval`\n\nactivates autoplay when passed (it uses milliseconds)\n\n### `loop`\n\n[BUGGY ON ANDROID] loops scroll of images, but in one direction only\n\n### `loopBothSides`\n\n[IOS ONLY] same as loop, but does it in any direction\n\n### `onPositionChanged`\n\ncalled when the current position is changed\n\n### `position`\n\nused for controlled components\n\n### `onPress`\n\nreturns an object with image url and index of image pressed\n\n### `style`\n\nstyles ScrollView inside ImageSlider, you may pass height here (100% by default)\n\n## License\n\nMIT\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/PaulBGD/react-native-image-slider.git"
  },
  "version": "2.0.3"
}

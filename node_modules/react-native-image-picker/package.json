{
  "@react-native-community/bob": {
    "source": "src",
    "output": "lib",
    "targets": [
      [
        "commonjs",
        {
          "flow": true
        }
      ],
      "module",
      "typescript"
    ]
  },
  "_args": [
    [
      {
        "raw": "react-native-image-picker@^1.0.2",
        "scope": null,
        "escapedName": "react-native-image-picker",
        "name": "react-native-image-picker",
        "rawSpec": "^1.0.2",
        "spec": ">=1.0.2 <2.0.0",
        "type": "range"
      },
      "C:\\Users\\Osama\\Desktop\\ers"
    ]
  ],
  "_from": "react-native-image-picker@^1.0.2",
  "_hasShrinkwrap": false,
  "_id": "react-native-image-picker@1.1.0",
  "_location": "/react-native-image-picker",
  "_nodeVersion": "12.6.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/react-native-image-picker_1.1.0_1567168968839_0.6731279317583669"
  },
  "_npmUser": {
    "name": "johandutoit",
    "email": "jdutoit.dev@gmail.com"
  },
  "_npmVersion": "6.9.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "react-native-image-picker@^1.0.2",
    "scope": null,
    "escapedName": "react-native-image-picker",
    "name": "react-native-image-picker",
    "rawSpec": "^1.0.2",
    "spec": ">=1.0.2 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/react-native-image-picker/-/react-native-image-picker-1.1.0.tgz",
  "_shasum": "c2a0523886edb4cf2cdc008ad0a71433142a4d53",
  "_shrinkwrap": null,
  "_spec": "react-native-image-picker@^1.0.2",
  "_where": "C:\\Users\\Osama\\Desktop\\ers",
  "author": {
    "name": "Marc Shilling",
    "url": "marcshilling"
  },
  "bugs": {
    "url": "https://github.com/react-native-community/react-native-image-picker/issues"
  },
  "contributors": [
    {
      "name": "Johan du Toit",
      "email": "jdutoit.dev@gmail.com"
    },
    {
      "name": "Matheus Santos",
      "email": "vorj.dux@gmail.com"
    },
    {
      "name": "Yoann Fuks",
      "email": "yfuks@student.42.fr"
    },
    {
      "name": "Alexander Ustinov",
      "email": "rusfearuth@gmail.com"
    }
  ],
  "dependencies": {},
  "description": "A React Native module that allows you to use native UI to select media from the device library or directly from the camera",
  "devDependencies": {
    "@babel/core": "^7.4.5",
    "@babel/runtime": "^7.4.5",
    "@react-native-community/bob": "^0.6.0",
    "@react-native-community/eslint-config": "^0.0.5",
    "@semantic-release/changelog": "^3.0.4",
    "@semantic-release/git": "7.0.12",
    "@types/jest": "^24.0.15",
    "@types/react": "^16.8.22",
    "@types/react-native": "^0.57.63",
    "@typescript-eslint/eslint-plugin": "^1.11.0",
    "@typescript-eslint/parser": "^1.11.0",
    "babel-jest": "^24.8.0",
    "eslint": "5.16.0",
    "eslint-config-prettier": "^5.0.0",
    "eslint-plugin-prettier": "3.0.1",
    "husky": "^2.4.1",
    "jest": "^24.8.0",
    "lint-staged": "^8.2.1",
    "metro-react-native-babel-preset": "^0.54.1",
    "prettier": "^1.18.2",
    "react": "16.8.6",
    "react-native": "0.60.0-rc.2",
    "react-test-renderer": "16.8.6",
    "rimraf": "^2.6.3",
    "semantic-release": "15.13.16",
    "ts-jest": "^24.0.2",
    "typescript": "^3.5.2"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-/KjHf4NNAjl6XM7FQuqvGDz1wB9sRdLf86+2yksLW/QTRR7CitX4TLCM8ZF9CX6Y0MsCTndkZia3zWE+nt/GiA==",
    "shasum": "c2a0523886edb4cf2cdc008ad0a71433142a4d53",
    "tarball": "https://registry.npmjs.org/react-native-image-picker/-/react-native-image-picker-1.1.0.tgz",
    "fileCount": 225,
    "unpackedSize": 952976,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdaRnJCRA9TVsSAnZWagAA1f8QAKNRW2YNTphYw0DB6YT3\noz2ypbHSwW4QSltdWpLsIB433jT83SmSCtl2gZPWUpSezcBG8ER1ybmGGbjr\naKCYm7Ws6AUarPa+F4P9bLfr1YjIQCX6mTeyu7EACKlD3HrQ9SyrwM/6zZOF\nHc1s4RUiMzNNXexV59ftLD0hBmP+w/ARD6IkSaEolSEqPKPXhcB0st70zUQs\nyeWVAm3KRxhR2lFF+pChyZbQHKkcdKMUwAeP0PhkPEO4f+l1C8wpwF3279Ed\nEtqGigr+DKotieDSVj4grKpLSsiKdsjnEItPMb96lGjBiEELWisO40ZXcEUK\n5n/8IJ/7tUPHdW1RCYDUCEI4ej/b2BJmLlqaT+TamOkbyorsIkgxeJ7v901p\noGYEbWOCYu5nXC74vFQmrSHvAIRjccFUeijhkbZScDuwGy6+eQOji8q/MTmt\nbaPXdy3jWle0Uua2Tn91F7FWjp2SaGoE5ODgj+vBmyzNvB7QciOYSuEOkN5q\nx7Ih30royuHznNBiOJ/n8w7gNaETfmbnohIXxz0S7a0TcN+qyLGskqK3keCO\n/X7W5Vh5NZnGotq/xeR0jz9Ok9ZlpTTzAM4nIbDveZrpvkRiG3vJ5xh7HhK7\nb+B7HqUHcUJwfF31gn+Q92JihEUTU++yBx/ndXcE1CyDXGDqddrQUROpgWOq\nLxIr\r\n=z7mY\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "files": [
    "/android",
    "!/android/build",
    "/ios",
    "/src",
    "/lib",
    "/*.podspec"
  ],
  "gitHead": "b70c0eab2e37e842f764fb677d30279fefa3eaa8",
  "homepage": "https://github.com/react-community/react-native-image-picker#readme",
  "husky": {
    "hooks": {
      "pre-commit": "lint-staged",
      "pre-push": "yarn test"
    }
  },
  "keywords": [
    "react-native",
    "react-native-image-picker",
    "react",
    "native",
    "image",
    "picker"
  ],
  "license": "MIT",
  "lint-staged": {
    "*.{js,ts,tsx}": [
      "yarn eslint --fix",
      "git add"
    ],
    "*.java": [
      "cd android && ./graldew spotlessApply",
      "git add"
    ]
  },
  "main": "lib/commonjs/index.js",
  "maintainers": [
    {
      "name": "haitaoli",
      "email": "lht1999@hotmail.com"
    },
    {
      "name": "janicduplessis",
      "email": "janicduplessis@gmail.com"
    },
    {
      "name": "johandutoit",
      "email": "jdutoit89@gmail.com"
    },
    {
      "name": "marcshilling",
      "email": "marcshilling@gmail.com"
    },
    {
      "name": "rusfearuth",
      "email": "rusfearuth@yandex.ru"
    },
    {
      "name": "vorjdux",
      "email": "vorj.dux@gmail.com"
    },
    {
      "name": "yfuks",
      "email": "yoannfuks@hotmail.fr"
    }
  ],
  "module": "lib/module/index.js",
  "name": "react-native-image-picker",
  "optionalDependencies": {},
  "react-native": "src/index.ts",
  "readme": "# React Native Image Picker\n\n[![npm version](https://badge.fury.io/js/react-native-image-picker.svg)](https://badge.fury.io/js/react-native-image-picker)\n[![npm](https://img.shields.io/npm/dt/react-native-image-picker.svg)](https://npmcharts.com/compare/react-native-image-picker?minimal=true)\n![MIT](https://img.shields.io/dub/l/vibe-d.svg)\n![Platform - Android and iOS](https://img.shields.io/badge/platform-Android%20%7C%20iOS-yellow.svg)\n[![Gitter chat](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/react-native-image-picker/Lobby)\n\nA React Native module that allows you to use native UI to select a photo/video from the device library or directly from the camera, like so:\n\n| iOS                                                                                                                   | Android                                                                                                                       |\n| --------------------------------------------------------------------------------------------------------------------- | ----------------------------------------------------------------------------------------------------------------------------- |\n| <img title=\"iOS\" src=\"https://github.com/react-community/react-native-image-picker/blob/master/images/ios-image.png\"> | <img title=\"Android\" src=\"https://github.com/react-community/react-native-image-picker/blob/master/images/android-image.png\"> |\n\n#### _Before you open an issue_\n\nThis library started as a basic bridge of the native iOS image picker, and I want to keep it that way. As such, functionality beyond what the native `UIImagePickerController` supports will not be supported here. **Multiple image selection, more control over the crop tool, and landscape support** are things missing from the native iOS functionality - **not issues with my library**. If you need these things, [react-native-image-crop-picker](https://github.com/ivpusic/react-native-image-crop-picker) might be a better choice for you.\n\n## React Native Compatibility\nTo use this library you need to ensure you match up with the correct version of React Native you are using.\n\np.s. React Native introduced AndroidX support in 0.60, which is a **breaking change** for most libraries (incl. this one) using native Android functionality.\n\n| `@react-native-community/imagepicker` version | Required React Native Version                                                     |\n| ----------------------------------------- | --------------------------------------------------------------------------------- |\n| `1.x.x`                                   | `>= 0.60` or `>= 0.59` if using [Jetifier](https://github.com/mikehardy/jetifier) |\n| `0.x.x`                                   | `<= 0.59`                                                                         |\n\n\n## Getting Started\n\n```\nyarn add react-native-image-picker\nreact-native link react-native-image-picker\n```\n\nYou will also need to add `UsageDescription` on iOS and some permissions on Android, refer to the [Install doc](docs/Install.md).\n\n## Usage\n\n```javascript\nimport ImagePicker from 'react-native-image-picker';\n\n// More info on all the options is below in the API Reference... just some common use cases shown here\nconst options = {\n  title: 'Select Avatar',\n  customButtons: [{ name: 'fb', title: 'Choose Photo from Facebook' }],\n  storageOptions: {\n    skipBackup: true,\n    path: 'images',\n  },\n};\n\n/**\n * The first arg is the options object for customization (it can also be null or omitted for default options),\n * The second arg is the callback which sends object: response (more info in the API Reference)\n */\nImagePicker.showImagePicker(options, (response) => {\n  console.log('Response = ', response);\n\n  if (response.didCancel) {\n    console.log('User cancelled image picker');\n  } else if (response.error) {\n    console.log('ImagePicker Error: ', response.error);\n  } else if (response.customButton) {\n    console.log('User tapped custom button: ', response.customButton);\n  } else {\n    const source = { uri: response.uri };\n\n    // You can also display the image using data:\n    // const source = { uri: 'data:image/jpeg;base64,' + response.data };\n\n    this.setState({\n      avatarSource: source,\n    });\n  }\n});\n```\n\nThen later, if you want to display this image in your render() method:\n\n```javascript\n<Image source={this.state.avatarSource} style={styles.uploadAvatar} />\n```\n\n### Directly Launching the Camera or Image Library\n\nTo Launch the Camera or Image Library directly (skipping the alert dialog) you can\ndo the following:\n\n```javascript\n// Launch Camera:\nImagePicker.launchCamera(options, (response) => {\n  // Same code as in above section!\n});\n\n// Open Image Library:\nImagePicker.launchImageLibrary(options, (response) => {\n  // Same code as in above section!\n});\n```\n\n#### Notes\n\nOn iOS, don't assume that the absolute uri returned will persist. See [#107](/../../issues/107)\n\nFor more, read the [API Reference](docs/Reference.md).\n\n## License\n\n[MIT](LICENSE.md)\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/react-native-community/react-native-image-picker.git"
  },
  "scripts": {
    "ci:publish": "yarn semantic-release",
    "prepare": "bob build",
    "semantic-release": "semantic-release",
    "start": "react-native start",
    "test": "yarn validate:eslint && yarn validate:typescript",
    "test:jest": "jest \"/src/\"",
    "validate:eslint": "eslint \"src/**/*.{js,ts,tsx}\" \"example/**/*.{js,ts,tsx}\"",
    "validate:typescript": "tsc --project ./ --noEmit"
  },
  "types": "lib/typescript/index.d.ts",
  "version": "1.1.0"
}

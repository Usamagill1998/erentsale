{
  "_args": [
    [
      {
        "raw": "react-native-image-slider-show@^1.0.3",
        "scope": null,
        "escapedName": "react-native-image-slider-show",
        "name": "react-native-image-slider-show",
        "rawSpec": "^1.0.3",
        "spec": ">=1.0.3 <2.0.0",
        "type": "range"
      },
      "C:\\Users\\Osama\\Desktop\\ers"
    ]
  ],
  "_from": "react-native-image-slider-show@^1.0.3",
  "_hasShrinkwrap": false,
  "_id": "react-native-image-slider-show@1.0.3",
  "_location": "/react-native-image-slider-show",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/react-native-image-slider-show_1.0.3_1536816779239_0.809604450579136"
  },
  "_npmUser": {
    "name": "kamal_pandey",
    "email": "kpandeyy@gmail.com"
  },
  "_phantomChildren": {},
  "_requested": {
    "raw": "react-native-image-slider-show@^1.0.3",
    "scope": null,
    "escapedName": "react-native-image-slider-show",
    "name": "react-native-image-slider-show",
    "rawSpec": "^1.0.3",
    "spec": ">=1.0.3 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/react-native-image-slider-show/-/react-native-image-slider-show-1.0.3.tgz",
  "_shasum": "4df4c0ba520074f7a5513cca9a83ea48ac8868a5",
  "_shrinkwrap": null,
  "_spec": "react-native-image-slider-show@^1.0.3",
  "_where": "C:\\Users\\Osama\\Desktop\\ers",
  "author": {
    "name": "Kamal Pandey"
  },
  "bugs": {
    "url": "https://github.com/kamalpandey/react-native-image-slider-show/issues"
  },
  "dependencies": {},
  "description": "A quick and easy slideshow for react native.",
  "devDependencies": {},
  "directories": {},
  "dist": {
    "shasum": "4df4c0ba520074f7a5513cca9a83ea48ac8868a5",
    "tarball": "https://registry.npmjs.org/react-native-image-slider-show/-/react-native-image-slider-show-1.0.3.tgz",
    "integrity": "sha512-9Tysqt4Q1I2OIYN1hJ+291Axy9JwsKFpr1a4uxu9uDMLGgkYsOLhbsMdgj7qVBmtLWZDQ9Kr45r+LNIRmmSvGg==",
    "fileCount": 4,
    "unpackedSize": 14818,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbmfaLCRA9TVsSAnZWagAAD9AP/iONGm3lTsWmnJTHnw7Y\nHXBbtSYjrJc0IIgbBgihR5mHkmWvu/F8o0OoOxKwYZ6eWDOayn41rOc+FK/F\nYpymLeAcaMrT9BqjBfw7pfvA6dQb7xhy+MXPqs0sc9ABpyeLq8ckQVcDVNpb\nqfS4PLhuXpQbCtxYVESR8hrCxwFR8qVjgUWcQXz1EHQ2dzLB6q6l+8FXAF9m\nU8AM7ZCEzT60WfcIVMWfbD0Bj0aSdx0hI5uZhfRXZXc4lsKlW2V1QN924oZM\n9pUSEvYIxJQ1/3XxyNfZNljI1JQ3UsLOJXjvp7t8vUYoeaa4pSDYKRPdo0kf\n96287w0ZSwnLDvgTq1Z5SIw1TRToDJz79BJeJc3ChJeexPzZ/0ZohGN2te+d\nAHrmdsnsIenN3xEtbevvSNSH1qmaD8rodKY/1wbKToxN5gB9x7NmgLEvhDML\nS15HT4UNTGfDcTF+TDmhiYEqMqJ6zK++Tr9QR/76dDLJwqyFiytUfqnEoaSF\nWuRs+buviC2GAB5Mn2vO102qieD0eOLag3uVcznmjIfR1hikpah7q9DM1yJD\n5ehIne49s70qvMhfL+N2GUm6k9Hwdk5lDZpFV9WEL3TMjnLhI7nA/BKjk/+N\nNqlDiTZGfy3DZpb3W3wLrK/77+VLxz42sEudcphd/ROCN4rVLcBB78opsVie\niOVo\r\n=ABT1\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "homepage": "https://github.com/kamalpandey/react-native-image-slider-show#readme",
  "keywords": [
    "react",
    "native",
    "slideshow"
  ],
  "license": "MIT",
  "main": "Slideshow.js",
  "maintainers": [
    {
      "name": "kamal_pandey",
      "email": "kpandeyy@gmail.com"
    }
  ],
  "name": "react-native-image-slider-show",
  "optionalDependencies": {},
  "readme": "# react-native-image-slider-show\nA quick and easy slideshow for react native. (Android & iOS)\n\n![GIF](demo1.gif) ![GIF](demo2.gif)\n\n## Installation\n\n```bash\nnpm install react-native-image-slider-show --save\n```\n\n## Usage\n\n```javascript\nimport Slideshow from 'react-native-image-slider-show';\n\n// ...\n\nrender() {\n  return (\n    <Slideshow \n      dataSource={[\n        { url:'http://placeimg.com/640/480/any' },\n        { url:'http://placeimg.com/640/480/any' },\n        { url:'http://placeimg.com/640/480/any' }\n    ]}/>\n  );\n}\n```\n## Autoplay Example\n\n```javascript\nexport default class SlideshowTest extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      position: 1,\n      interval: null,\n      dataSource: [\n        {\n          title: 'Title 1',\n          caption: 'Caption 1',\n          url: 'http://placeimg.com/640/480/any',\n        }, {\n          title: 'Title 2',\n          caption: 'Caption 2',\n          url: 'http://placeimg.com/640/480/any',\n        }, {\n          title: 'Title 3',\n          caption: 'Caption 3',\n          url: 'http://placeimg.com/640/480/any',\n        },\n      ],\n    };\n  }\n\n  componentWillMount() {\n    this.setState({\n      interval: setInterval(() => {\n        this.setState({\n          position: this.state.position === this.state.dataSource.length ? 0 : this.state.position + 1\n        });\n      }, 2000)\n    });\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.state.interval);\n  }\n\n  render() {\n    return (\n    <Slideshow \n        dataSource={this.state.dataSource}\n        position={this.state.position}\n        onPositionChanged={position => this.setState({ position })} />\n    );\n  }\n}\n```\n\n## Props\n\n| Property | Type | isRequired? | Default | Description |\n| --- | :---: | :---: | :---: | --- |\n| `dataSource` | bool | required | - | slideshow data |\n| `height` | number | optional | 200 | container height |\n| `position` | number | optional | - | set position slideshow |\n| `scrollEnabled` | bool | optional | true | enable / disable scrolling |\n| `overlay` | bool | optional | false | background overlay |\n| `indicatorSize` | number | optional | 16 | indicator size |\n| `indicatorColor` | string | optional | #CCCCCC |indicator color |\n| `indicatorSelectedColor` | string | optional | #FFFFFF | indicator selected color |\n| `arrowSize` | number | optional | 16 | arrow size |\n| `arrowLeft` | object | optional | - | component arrow left |\n| `arrowRight` | object | optional | - | component arrow right |\n| `onPress` | func | optional | - | returns an object image and index of image pressed|\n| `onPositionChanged` | func | optional | - | called when the current position is changed |\n| `containerStyle` | object | optional | - | custom styles for container |\n| `titleStyle` | object | - | - | custom styles for title |\n| `captionStyle` | object | - | - | custom styles for caption |\n\n\n\n### Data Structure\n\n```javascript\n// example data structure\n\ndataSource: [\n  {\n    title: 'title 1',\n    caption: 'caption 1',\n    url: 'url 1',\n  }, {\n    title: 'title 1',\n    caption: 'caption 1',\n    url: 'url 2',\n  },\n]\n```\n\n| Property | Type | Description |\n| --- | :---: | --- |\n| `title` | string | title |\n| `caption` | string | caption |\n| `url` | string / number | image (URL or a local file resource) |\n\n## Credits\n[react-native-image-slider](https://github.com/PaulBGD/react-native-image-slider)\n\n## License\nMIT",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/kamalpandey/react-native-image-slider-show.git"
  },
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "version": "1.0.3"
}

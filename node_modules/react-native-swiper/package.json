{
  "_args": [
    [
      {
        "raw": "react-native-swiper@^1.5.14",
        "scope": null,
        "escapedName": "react-native-swiper",
        "name": "react-native-swiper",
        "rawSpec": "^1.5.14",
        "spec": ">=1.5.14 <2.0.0",
        "type": "range"
      },
      "C:\\Users\\Osama\\Desktop\\ers"
    ]
  ],
  "_from": "react-native-swiper@^1.5.14",
  "_hasShrinkwrap": false,
  "_id": "react-native-swiper@1.5.14",
  "_location": "/react-native-swiper",
  "_nodeVersion": "11.1.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/react-native-swiper_1.5.14_1543227648993_0.895873860135092"
  },
  "_npmUser": {
    "name": "arribbar",
    "email": "bart@getkumbu.com"
  },
  "_npmVersion": "6.4.1",
  "_phantomChildren": {},
  "_requested": {
    "raw": "react-native-swiper@^1.5.14",
    "scope": null,
    "escapedName": "react-native-swiper",
    "name": "react-native-swiper",
    "rawSpec": "^1.5.14",
    "spec": ">=1.5.14 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/react-native-swiper/-/react-native-swiper-1.5.14.tgz",
  "_shasum": "1c6f949ca377186300f972bb0f30d24062c899aa",
  "_shrinkwrap": null,
  "_spec": "react-native-swiper@^1.5.14",
  "_where": "C:\\Users\\Osama\\Desktop\\ers",
  "author": "",
  "ava": {
    "babel": "inherit",
    "require": []
  },
  "bugs": {
    "url": "https://github.com/leecade/react-native-swiper/issues"
  },
  "dependencies": {
    "prop-types": "^15.5.10"
  },
  "description": "Swiper component for React Native.",
  "devDependencies": {
    "babel-eslint": "^8.0.1",
    "rimraf": "^2.5.4",
    "snazzy": "^6.0.0",
    "standard": "^10.0.3",
    "updtr": "^2.0.0"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-Kn0fxKooN7Shwu1qJYHB+Y8ssXXnvrIwReHXU5jCdyYNfz2QbBv0Cv3sa2Mqzr+XgzORCFFIokc8uCCUITDrVA==",
    "shasum": "1c6f949ca377186300f972bb0f30d24062c899aa",
    "tarball": "https://registry.npmjs.org/react-native-swiper/-/react-native-swiper-1.5.14.tgz",
    "fileCount": 13,
    "unpackedSize": 91216,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJb+8kBCRA9TVsSAnZWagAA0sEP/RBKcQHpvAsqyd3ZAblO\nSewL9IbJ6uMw/sMUXU4Iv5M7MgktW0q7Jff09QbfWAsW10TZ110bHodDgjwt\nNTnQjQBXtLH7qnaODIRg11c9m6TTToVAhBB8YlAZCPyDFnF4nO2I21lBK9yV\nyKPHr0V7tQRCIkseZahT92NjT9f4D1t/Hg/ldfCQyvDwy+oEHzkBTojY0jJ1\n92A/XP/opYfcOi8wfgef020227KFtpAYiBbLVYzOxLH8pxivsw7NjenqEP6v\nn8SiqlbjeBsNMDKtY7N6Y+VHM74CyyPc+gXKceQtkFfT/kXZTbh5+W9wEt1r\nJtQENH1512Jftr5bKBx95jQ7YBybh1muSyTE1ZnsYz2/B0zY5YKHRRPkbGTp\nMjLssytp+wAwxhktojVwYpttGcRHss3pcwkwYTaQb3wj/jHp06xIPWRGnKKv\n9TZLzRkSilggoevpP26Ccg32mVA6VhB/d5IBfeu/4x3nYHQnfNYR899jU8mM\nUwMiD57aHuo+FFXoYDWOL7YrRMwC4Giunoelfzd4F7Nc6fzdO9xTMWcAlowt\nOwk9as32YD+7nXqjprQIiep6k2Tff3WIEzdVdJ7k4iWGikpEf+dLDPaUqGHR\nxvCFjUuAQ3RxkR4rM/InpAAMNE5Wvpmpsjp+PnTDEKXefk77xByTmKg7JqH0\n3t+V\r\n=o3sN\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "gitHead": "cb8c080a8ff6a483aa936317e3f4b338b3188809",
  "homepage": "https://github.com/leecade/react-native-swiper#readme",
  "keywords": [
    "react-component",
    "react-native",
    "ios"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "arribbar",
      "email": "bart@getkumbu.com"
    },
    {
      "name": "leecade",
      "email": "leecade@163.com"
    },
    {
      "name": "mrdezzods",
      "email": "bvsapkota@gmail.com"
    },
    {
      "name": "rajkissu",
      "email": "rajkissu@gmail.com"
    },
    {
      "name": "tasiyo7333",
      "email": "taisyo9170@yahoo.co.jp"
    }
  ],
  "name": "react-native-swiper",
  "optionalDependencies": {},
  "pre-commit": {
    "run": [
      "precommit"
    ],
    "silent": true
  },
  "readme": "> Hi there:\n\n[**头条财经前端团队急招**] 了解团队 / 投简历请联系: \n\n微信: 103024979 / 邮箱: leecade@163.com\n\n「全新团队, 全新产品, 全新技术栈, 不设技术边界, 不设管理, 不装」\n\n要求: 参考头条面试标准 (重度: `Node` / `RN` / `Vue` / `React` / `微服务` 等技术向)\n\n<img style=\"float: left\" alt=\"react-native-swiper\" src=\"https://user-images.githubusercontent.com/533360/45361035-c620de00-b603-11e8-9fa7-cb7586e08b66.png\" width=\"150\">\n\n----\n\n<p align=\"center\">\n  <img alt=\"react-native-swiper\" src=\"http://i.imgur.com/P4cRUgD.png\" width=\"208\">\n</p>\n\n<p align=\"center\">\n  The best Swiper component for React Native.\n</p>\n\n<p align=\"center\">\n  <a href=\"http://standardjs.com/\"><img alt=\"JavaScript Style Guide\" src=\"https://img.shields.io/badge/code%20style-standard-brightgreen.svg?style=flat-square\"></a>\n  <a href=\"https://npmjs.org/package/react-native-swiper\"><img alt=\"npm version\" src=\"http://img.shields.io/npm/v/react-native-swiper.svg?style=flat-square\"></a>\n  <a href=\"https://npmjs.org/package/react-native-swiper\"><img alt=\"npm version\" src=\"http://img.shields.io/npm/dm/react-native-swiper.svg?style=flat-square\"></a>\n  <a href=\"https://github.com/leecade/react-native-swiper/pulls?q=is%3Apr+is%3Aclosed\"><img alt=\"PR Stats\" src=\"https://img.shields.io/issuestats/i/github/leecade/react-native-swiper.svg?style=flat-square\"></a>\n  <a href=\"https://github.com/leecade/react-native-swiper/issues?q=is%3Aissue+is%3Aclosed\"><img alt=\"Issue Stats\" src=\"https://img.shields.io/issuestats/p/github/leecade/react-native-swiper.svg?style=flat-square\"></a>\n  <a href=\"https://gitter.im/leecade/react-native-swiper?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge\"><img alt=\"Join the chat\" src=\"https://badges.gitter.im/leecade/react-native-swiper.svg\"></a>\n</p>\n\n# react-native-swiper\n\n## Roadmap\n\n> see: [ROADMAP.md](ROADMAP.md)\n\n## Changelogs\n- **[1.5.6]**\n  + Fix [#16](https://github.com/leecade/react-native-swiper/issues/16), [#36](https://github.com/leecade/react-native-swiper/issues/36), [#371](https://github.com/leecade/react-native-swiper/issues/371), [#410](https://github.com/leecade/react-native-swiper/issues/410), [#411](https://github.com/leecade/react-native-swiper/issues/411), [#422](https://github.com/leecade/react-native-swiper/issues/422), [#468](https://github.com/leecade/react-native-swiper/issues/468) Fix landscape orientation auto resize! (thanks [@ahmed3mar](https://github.com/ahmed3mar), [@timmywil](https://github.com/timmywil))\n  + Add containerStyle prop to customize the view container.\n  \n- [1.5.5]\n  + Update: using PropTypes from prop-types and Change View.propTypes to ViewPropTypes\n\n\n- [1.5.4]\n  + Added easily accessible pagination point manipulation: use `dotColor` / `activeDotColor` and `dotStyle` / `activeDotStyle` (thanks [@denizs](https://github.com/denizs))\n  + Added scrollEnabled prop to documentation (thanks [@ibandominguez](https://github.com/ibandominguez))\n\n- [1.5.3]\n  + Add loadMinimalLoader prop to customize `<ActivityIndicator />` (thanks [@Exilz](https://github.com/Exilz))\n  + Disable autoplay timer when prop changes to false (thanks [@dizlexik](https://github.com/dizlexik))\n  + Special thanks to [@hypatiah](https://github.com/dizlexik) for fixed some grammatical errors in README\n\n- [1.5.2]\n  + Add yarn lock\n  + Fix jitter when quickly swiping back and forth between pages (iOS) (thanks [@nemophrost](https://github.com/nemophrost))\n  + The first webview always reloaded when injecting the rest of the children (thanks [@eosterberg](https://github.com/eosterberg))\n\n> see more: [CHANGELOG.md](CHANGELOG.md)\n\n## Show Cases\n\n> Try these cases by yourself very easy, Just open `examples/ios/swiper.xcodeproj` in Xcode, then press `Cmd + R`; you may edit `examples/index.ios.js` for switch cases.\n\n### [examples/components/Basic](https://github.com/leecade/react-native-swiper/blob/master/examples/components/Basic)\n\n![](http://i.imgur.com/zrsazAG.gif=300x)\n\n### [examples/components/Swiper](https://github.com/leecade/react-native-swiper/blob/master/examples/components/Swiper)\n\n![](http://i.imgur.com/hP3f3oO.gif=300x)\n\n### [examples/components/SwiperNumber](https://github.com/leecade/react-native-swiper/blob/master/examples/components/SwiperNumber)\n\n![](http://i.imgur.com/0rqESVb.gif=300x)\n\n### [examples/components/Phone](https://github.com/leecade/react-native-swiper/blob/master/examples/components/Phone)\n\n![](http://i.imgur.com/c1BhjZm.gif=300x)\n\n### [examples/components/LoadMinimal](https://github.com/leecade/react-native-swiper/blob/master/examples/components/LoadMinimal)\n\n![](http://i.imgur.com/LAOHbJA.gif=300x)\n\n\n## Getting Started\n\n- [Installation](#installation)\n- [Basic Usage](#basic-usage)\n- [Properties](#properties)\n  + [Basic](#basic)\n  + [Custom basic style & content](#custom-basic-style--content)\n  + [Pagination](#pagination)\n  + [Autoplay](#autoplay)\n  + [Control buttons](#control-buttons)\n  + [Props of Children](#props-of-children)\n  + [Basic props of `<ScrollView />`](#basic-props-of-scrollview-)\n  + [Supported ScrollResponder](#supported-scrollresponder)\n- [Examples](#examples)\n- [Development](#development)\n\n### Installation\n\n```bash\n$ npm i react-native-swiper --save\n```\n\n### Basic Usage\n\n- Install `react-native` first\n\n```bash\n$ npm i react-native-cli -g\n```\n\n- Initialization of a react-native project\n\n```bash\n$ react-native init myproject\n```\n\n- Then, edit `myproject/index.ios.js`, like this:\n\n```jsx\nimport React, { Component } from 'react';\nimport {\n  AppRegistry,\n  StyleSheet,\n  Text,\n  View\n} from 'react-native';\n\nimport Swiper from 'react-native-swiper';\n\nconst styles = StyleSheet.create({\n  wrapper: {\n  },\n  slide1: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#9DD6EB',\n  },\n  slide2: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#97CAE5',\n  },\n  slide3: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#92BBD9',\n  },\n  text: {\n    color: '#fff',\n    fontSize: 30,\n    fontWeight: 'bold',\n  }\n})\n\nexport default class Swiper extends Component {\n  render(){\n    return (\n      <Swiper style={styles.wrapper} showsButtons={true}>\n        <View style={styles.slide1}>\n          <Text style={styles.text}>Hello Swiper</Text>\n        </View>\n        <View style={styles.slide2}>\n          <Text style={styles.text}>Beautiful</Text>\n        </View>\n        <View style={styles.slide3}>\n          <Text style={styles.text}>And simple</Text>\n        </View>\n      </Swiper>\n    );\n  }\n}\n\nAppRegistry.registerComponent('myproject', () => Swiper);\n```\n\n### Properties\n\n#### Basic\n\n| Prop  | Default  | Type | Description |\n| :------------ |:---------------:| :---------------:| :-----|\n| horizontal | true | `bool` | If `true`, the scroll view's children are arranged horizontally in a row instead of vertically in a column. |\n| loop | true | `bool` | Set to `false` to disable continuous loop mode. |\n| index | 0 | `number` | Index number of initial slide. |\n| showsButtons | false | `bool` | Set to `true` make control buttons visible. |\n| autoplay | false | `bool` | Set to `true` enable auto play mode. |\n| onIndexChanged | (index) => null | `func` | Called with the new index when the user swiped |\n\n#### Custom basic style & content\n\n| Prop  | Default  | Type | Description |\n| :------------ |:---------------:| :---------------:| :-----|\n| width | - | `number` | If no specify default enable fullscreen mode by `flex: 1`. |\n| height | - | `number` | If no specify default fullscreen mode by `flex: 1`. |\n| style | {...} | `style` | See default style in source. |\n| containerStyle | {...} | `style` | See default container style in source. |\n| loadMinimal | false | `bool` | Only load current index slide , `loadMinimalSize` slides before and after. |\n| loadMinimalSize | 1 | `number` | see `loadMinimal`   |\n| loadMinimalLoader | `<ActivityIndicator />` | `element` | Custom loader to display when slides aren't loaded\n\n#### Pagination\n\n| Prop  | Default  | Type | Description |\n| :------------ |:---------------:| :---------------:| :-----|\n| showsPagination | true | `bool` | Set to `true` make pagination visible. |\n| paginationStyle | {...} | `style` | Custom styles will merge with the default styles. |\n| renderPagination | - | `function` | Complete control how to render pagination with three params (`index`, `total`, `context`) ref to `this.state.index` / `this.state.total` / `this`, For example: show numbers instead of dots. |\n| dot | `<View style={{backgroundColor:'rgba(0,0,0,.2)', width: 8, height: 8,borderRadius: 4, marginLeft: 3, marginRight: 3, marginTop: 3, marginBottom: 3,}} />` | `element` | Allow custom the dot element. |\n| activeDot | `<View style={{backgroundColor: '#007aff', width: 8, height: 8, borderRadius: 4, marginLeft: 3, marginRight: 3, marginTop: 3, marginBottom: 3,}} />` | `element` | Allow custom the active-dot element. |\n| dotStyle | - | `object` | Allow custom the active-dot element. |\n| dotColor | - | `string` | Allow custom the active-dot element. |\n| activeDotColor | - | `string` | Allow custom the active-dot element. |\n| activeDotStyle | - | `object` | Allow custom the active-dot element. |\n\n#### Autoplay\n\n| Prop  | Default  | Type | Description |\n| :------------ |:---------------:| :---------------:| :-----|\n| autoplay | true | `bool` | Set to `true` enable auto play mode. |\n| autoplayTimeout | 2.5 | `number` | Delay between auto play transitions (in second). |\n| autoplayDirection | true | `bool` | Cycle direction control. |\n\n#### Control buttons\n\n| Prop  | Default  | Type | Description |\n| :------------ |:---------------:| :---------------:| :-----|\n| showsButtons | true | `bool` | Set to `true` make control buttons visible. |\n| buttonWrapperStyle | `{backgroundColor: 'transparent', flexDirection: 'row', position: 'absolute', top: 0, left: 0, flex: 1, paddingHorizontal: 10, paddingVertical: 10, justifyContent: 'space-between', alignItems: 'center'}` | `style` | Custom styles. |\n| nextButton | `<Text style={styles.buttonText}>›</Text>` | `element` | Allow custom the next button. |\n| prevButton | `<Text style={styles.buttonText}>‹</Text>` | `element` | Allow custom the prev button. |\n\n#### Props of Children\n\n| Prop  | Default  | Type | Description |\n| :------------ |:---------------:| :---------------:| :-----|\n| style | {...} | `style` | Custom styles will merge with the default styles. |\n| title | {<Text numberOfLines={1}>...</Text>} | `element` | If this parameter is not specified, will not render the title. |\n\n#### Basic props of `<ScrollView />`\n\n| Prop  | Default  | Type | Description |\n| :------------ |:---------------:| :---------------:| :-----|\n| horizontal | true | `bool` | If `true`, the scroll view's children are arranged horizontally in a row instead of vertically in a column. |\n| pagingEnabled | true | `bool` | If true, the scroll view stops on multiples of the scroll view's size when scrolling. This can be used for horizontal pagination.  |\n| showsHorizontalScrollIndicator | false | `bool` | Set to `true` if you want to show horizontal scroll bar. |\n| showsVerticalScrollIndicator | false | `bool` |  Set to `true` if you want to show vertical scroll bar. |\n| bounces | false | `bool` | If `true`, the scroll view bounces when it reaches the end of the content if the content is larger then the scroll view along the axis of the scroll direction. If `false`, it disables all bouncing even if the alwaysBounce* props are true.  |\n| scrollsToTop | false | `bool` | If true, the scroll view scrolls to top when the status bar is tapped.  |\n| removeClippedSubviews | true | `bool` | If true, offscreen child views (whose overflow value is hidden) are removed from their native backing superview when offscreen. This canimprove scrolling performance on long lists.  |\n| automaticallyAdjustContentInsets | false | `bool` | Set to `true` if you need adjust content insets automation. |\n| scrollEnabled | true | `bool` | Enables/Disables swiping |\n\n> @see: http://facebook.github.io/react-native/docs/scrollview.html\n\n#### Supported ScrollResponder\n\n| Prop  | Params  | Type | Description |\n| :------------ |:---------------:| :---------------:| :-----|\n| onScrollBeginDrag | `e` / `state` / `context` | `function` | When animation begins after letting up |\n| onMomentumScrollEnd | `e` / `state` / `context` | `function` | Makes no sense why this occurs first during bounce |\n| onTouchStartCapture | `e` / `state` / `context` | `function` | Immediately after `onMomentumScrollEnd` |\n| onTouchStart | `e` / `state` / `context` | `function` | Same, but bubble phase |\n| onTouchEnd | `e` / `state` / `context` | `function` | You could hold the touch start for a long time |\n| onResponderRelease | `e` / `state` / `context` | `function` | When lifting up - you could pause forever before * lifting |\n\n> Note: each ScrollResponder be injected with two params: `state` and `context`, you can get `state` and `context`(ref to swiper's `this`) from params, for example:\n\n```jsx\nvar swiper = React.createClass({\n  _onMomentumScrollEnd: function (e, state, context) {\n    console.log(state, context.state)\n  },\n  render: function() {\n    return (\n      <Swiper style={styles.wrapper}\n      onMomentumScrollEnd ={this._onMomentumScrollEnd}\n     ...\n      </Swiper>\n    )\n  }\n})\n```\n\n> More ScrollResponder info, see: https://github.com/facebook/react-native/blob/master/Libraries/Components/ScrollResponder.js\n\n### Methods\n\n#### scrollBy(index, animated)\n\nScroll by relative index.\n\nParameters:\n\n| Name  | Type     | default | Description |\n| :---- | :------: | :------: | :--- |\n| index | `number`   | `undefined` | offset index |\n| animated | `bool`   | `true` | offset index |\n\n### Examples\n\n```bash\n$ cd examples\n$ npm i\n$ react-native run-ios\n```\n\n> Quick start with [examples](https://github.com/leecade/react-native-swiper/tree/master/examples/).\n\n### Development\n\n```bash\n$ cd examples\n$ npm i\n$ npm run dev\n$ react-native run-ios\n```\n\nThen launch simulator to preview. Note that you just need to edit the source file `src/index.js`, the change will auto sync to examples.\n\nAnd now that this project follows the [standard](https://github.com/feross/standard) code style, you'd better prepare it for IDE.\n\n## Contribution\n\n- [@leecade](mailto:leecade@163.com) The main author.\n- [@rajkissu](mailto:rajkissu@gmail.com) The secondary contributor.\n\n## Questions\n\nFeel free to [contact me](mailto:leecade@163.com) or [create an issue](https://github.com/leecade/react-native-swiper/issues/new)\n\n> Inspired by [nolimits4web/Swiper](https://github.com/nolimits4web/swiper/) & Design material from [Dribbble](https://dribbble.com/) & made with ♥.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/leecade/react-native-swiper.git"
  },
  "scripts": {
    "lint": "standard | snazzy",
    "precommit": "git diff --name-only --cached --relative | grep '\\.jsx\\?$' | xargs standard | snazzy; if [ $? -ne 0 ]; then exit 1; fi",
    "start": "react-native start",
    "test": "npm run lint",
    "update": "updtr"
  },
  "standard": {
    "parser": "babel-eslint",
    "global": [
      "__DEV__",
      "FormData",
      "requestAnimationFrame",
      "alert",
      "setImmediate",
      "fetch"
    ],
    "ignore": [
      "dist/",
      "mock/",
      "node_modules/"
    ]
  },
  "version": "1.5.14"
}
